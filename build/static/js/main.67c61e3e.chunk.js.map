{"version":3,"sources":["components/todo/form.js","components/todo/list.js","components/todo/todo.js","Styling/Navbar.js","app.js","index.js"],"names":["TodoForm","props","useState","item","setItem","handleInputChange","e","target","name","value","Card","bg","key","text","style","width","className","Header","Body","Form","onSubmit","preventDefault","reset","handleSubmit","items","Group","controlId","Label","Control","type","placeholder","onChange","defaultValue","Button","variant","TodoList","ListGroup","list","map","Item","action","complete","toString","_id","onClick","handleComplete","assignee","ToDo","setList","useEffect","difficulty","document","title","filter","length","Container","fluid","Row","xs","Col","Alert","Heading","Math","random","id","i","list1","listItem","Bar","Navbar","Brand","href","Nav","Link","App","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.67c61e3e.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState} from \"react\";\nimport {Button, Card, Form} from \"react-bootstrap\";\n\nfunction TodoForm(props) {\n  const [item, setItem] = useState({});\n  const handleInputChange = (e) => {\n    setItem({ ...item, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    props.handleSubmit(item);\n    const items = {};\n    setItem({ items });\n  };\n\n  return (\n    <>\n    <Card\nbg={'light'}\nkey='6'\ntext={'light' === 'light' ? 'dark' : 'white'}\nstyle={{ width: '100%' }}\nclassName=\"mb-2\"\n>\n      <Card.Header style={{ 'text-align': 'center' }}>Add Item</Card.Header>\n      <Card.Body>\n      {/* from here  */}\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"exampleForm.ControlInput1\">\n          <Form.Label>To Do Item</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Add To Do List Item\"\n            name=\"text\"\n            onChange={handleInputChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicRange\">\n          <Form.Label>Difficulty Rating</Form.Label>\n          <Form.Control\n            type=\"range\"\n            defaultValue=\"1\"\n            type=\"range\"\n            min=\"1\"\n            max=\"5\"\n            name=\"difficulty\"\n            onChange={handleInputChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect2\">\n          <Form.Label>Assigned To</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Assigned To\"\n            onChange={handleInputChange}\n            name=\"assignee\"\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Add Item\n        </Button>{\" \"}\n      </Form>\n      {/* to here  */}\n      </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default TodoForm;\n\n\n","import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nfunction TodoList(props) {\n\n    return (\n      <ListGroup>\n        {props.list.map(item => (\n          <ListGroup.Item\n          action ={true}\n          variant={item.complete ? 'danger' : 'success'}\n         \n            className={`complete-${item.complete.toString()}`}\n            key={item._id}\n          >\n            <span onClick={() => props.handleComplete(item._id)}>\n              {item.text}  /  {item.assignee}\n            </span>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    );\n\n}\n\nexport default TodoList;\n\n{/* <>\n  <>No style</>\n  <ListGroup.Item variant=\"primary\">Primary</ListGroup.Item>\n  <ListGroup.Item variant=\"secondary\">Secondary</ListGroup.Item>\n  <ListGroup.Item variant=\"success\">Success</ListGroup.Item>\n  <ListGroup.Item variant=\"danger\">Danger</ListGroup.Item>\n  <ListGroup.Item variant=\"warning\">Warning</ListGroup.Item>\n  <ListGroup.Item variant=\"info\">Info</ListGroup.Item>\n  <ListGroup.Item variant=\"light\">Light</ListGroup.Item>\n  <ListGroup.Item variant=\"dark\">Dark</ListGroup.Item>\n</> */}\n","import React from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport {useState, useEffect} from 'react'\nimport {Alert, Container, Row, Col} from \"react-bootstrap\";\nimport Badge from 'react-bootstrap/Badge'\n\nimport './todo.scss';\n\nfunction ToDo (props){\n\n  const [list, setList] = useState([])\n\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n const toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let list1 = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(list1);\n    }\n\n  };\n\n  useEffect( ()=>{\n    let list2 =  [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n    ];\n    setList(list2);\n  },[]);\n\n  useEffect( () => {\n    //complete/incomplete\n    document.title = \"To-do List \" +\n      list.filter((item) => !item.complete).length + \" Completed/ \" +\n      list.filter((item) => item.complete).length + \" Incompleted\";\n  });\n\n    return (\n      <Container fluid=\"md\">\n <br/>\n        <Row xs={7}>\n          <Col>\n          <Alert  key='0' variant='primary'>\n      <Alert.Heading style={{ 'text-align': 'center' }}>There are {list.filter((item) => !item.complete).length} Items To\n          Complete</Alert.Heading>\n          </Alert>\n          </Col>\n        </Row>\n\n \n\n        <section className=\"todo\">\n          <Row>\n\n          <Col xs={5}>\n            <TodoForm handleSubmit={addItem} />\n          </Col>\n\n          <Col >\n            <TodoList\n              list={list}\n              handleComplete={toggleComplete}\n            />\n          </Col>\n          </Row>\n        </section>\n        \n      </Container>\n    );\n  \n}\n\nexport default ToDo;\n","import { Navbar,Nav } from 'react-bootstrap'\nimport React from \"react\";\n\nfunction Bar() {\n    return (\n      <>\n        <Navbar bg=\"primary\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\"></Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#home\">Home</Nav.Link>\n          </Nav>\n        </Navbar>\n      </>\n    );\n  }\n  \nexport default Bar;","import React from \"react\";\nimport ToDo from \"./components/todo/todo.js\";\nimport Navbar from './Styling/Navbar';\n\n\nfunction App() {\n  return (\n    <>\n     <Navbar/>\n      <ToDo />\n    </>  \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './app.js';\n\n\n\n// class Main extends React.Component {\n//   render() {\n//     return <App />;\n//   }\n// }\nfunction Main()  {\n    return <App />\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}