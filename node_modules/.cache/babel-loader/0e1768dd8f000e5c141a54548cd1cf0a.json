{"ast":null,"code":"var _jsxFileName = \"/home/boshra/401labs/hooks/todo/src/context/auth.js\";\nimport React, { useState, useEffect } from \"react\";\nimport cookie from \"react-cookies\";\nimport jwt from \"jsonwebtoken\";\nimport dotenv from \"dotenv\";\nimport superagent from \"superagent\";\ndotenv.config();\nconst API = process.env.API;\nconst SECERT = process.env.SECERT; // this component is responsible for the login and log out and setting the cookies and the global state.\n\nexport const LoginContext = React.createContext();\n\nconst LoginProvider = props => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    const token = cookie.load(\"auth\");\n    validateToken(token);\n  }, []);\n\n  function validateToken(token) {\n    try {\n      const user = jwt.decode(token);\n      if (user) setLoginState(true, token, user);\n    } catch (error) {\n      setLoginState(false, null, {});\n      console.log(`Token Validation Error ${error.message}`);\n    }\n  }\n\n  function setLoginState(loggedIn, token, user) {\n    cookie.save(\"auth\", token);\n    setUser({\n      user\n    });\n    setLoggedIn(loggedIn);\n  }\n\n  function setLogoutState(loggedIn, user) {\n    cookie.save(\"auth\", null);\n    setUser({\n      user\n    });\n    setLoggedIn(loggedIn);\n  }\n\n  async function login(username, password) {\n    try {\n      const response = await superagent.post(`${API}/signin`).set(\"authorization\", `Basic ${btoa(`${username}:${password}`)}`);\n      validateToken(response.body.token);\n    } catch (error) {\n      console.error(\"Signin Error\", error.message);\n    }\n  }\n\n  async function signup(email, username, password, role) {\n    try {\n      const response = await superagent.post(`${API}/signup`, {\n        email,\n        username,\n        password,\n        role\n      });\n      validateToken(response.body.token);\n    } catch (error) {\n      console.error(\"Signup Error\", error.message);\n    }\n  }\n\n  function logout() {\n    setLogoutState(false, {});\n  }\n\n  const state = {\n    loggedIn,\n    user,\n    setLoggedIn,\n    login,\n    signup,\n    logout,\n    setUser\n  };\n  return /*#__PURE__*/React.createElement(LoginContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default LoginProvider;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/context/auth.js"],"names":["React","useState","useEffect","cookie","jwt","dotenv","superagent","config","API","process","env","SECERT","LoginContext","createContext","LoginProvider","props","loggedIn","setLoggedIn","user","setUser","token","load","validateToken","decode","setLoginState","error","console","log","message","save","setLogoutState","login","username","password","response","post","set","btoa","body","signup","email","role","logout","state","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport cookie from \"react-cookies\";\nimport jwt from \"jsonwebtoken\";\nimport dotenv from \"dotenv\";\nimport superagent from \"superagent\";\ndotenv.config();\n\nconst API = process.env.API;\nconst SECERT = process.env.SECERT;\n// this component is responsible for the login and log out and setting the cookies and the global state.\nexport const LoginContext = React.createContext();\n\nconst LoginProvider = (props) => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n  \n  useEffect(() => {\n    const token = cookie.load(\"auth\");\n    validateToken(token);\n  }, []);\n\n  function validateToken(token) {\n    try {\n      const user = jwt.decode(token);\n      if (user) setLoginState(true, token, user);\n    } catch (error) {\n      setLoginState(false, null, {});\n      console.log(`Token Validation Error ${error.message}`);\n    }\n  }\n\n  function setLoginState(loggedIn, token, user) {\n    cookie.save(\"auth\", token);\n    setUser({ user });\n    setLoggedIn(loggedIn);\n  }\n\n  function setLogoutState(loggedIn, user) {\n    cookie.save(\"auth\", null);\n    setUser({ user });\n    setLoggedIn(loggedIn);\n  }\n\n  async function login(username, password) {\n    try {\n      const response = await superagent\n        .post(`${API}/signin`)\n        .set(\"authorization\", `Basic ${btoa(`${username}:${password}`)}`);\n      validateToken(response.body.token);\n    } catch (error) {\n      console.error(\"Signin Error\", error.message);\n    }\n  }\n\n  async function signup(email, username, password, role) {\n    try {\n      const response = await superagent.post(`${API}/signup`, {\n        email,\n        username,\n        password,\n        role,\n      });\n\n      validateToken(response.body.token);\n    } catch (error) {\n      console.error(\"Signup Error\", error.message);\n    }\n  }\n\n  function logout() {\n    setLogoutState(false, {});\n  }\n\n  const state = {\n    loggedIn,\n    user,\n    setLoggedIn,\n    login,\n    signup,\n    logout,\n    setUser,\n  };\n\n  return (\n    <LoginContext.Provider value={state}>\n      {props.children}\n    </LoginContext.Provider>\n  );\n};\n\nexport default LoginProvider;\n"]},"metadata":{},"sourceType":"module"}