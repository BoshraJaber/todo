{"ast":null,"code":"var _jsxFileName = \"/home/boshra/401labs/hooks/todo/src/components/todo/todo.js\";\nimport React from \"react\";\nimport TodoForm from \"./form.js\";\nimport TodoList from \"./list.js\";\nimport { useState, useEffect } from \"react\";\nimport { Alert, Container, Row, Col } from \"react-bootstrap\";\nimport \"./todo.scss\";\nconst todoAPI = \"https://api-js401.herokuapp.com/api/v1/todo\";\n\nfunction ToDo(props) {\n  const [list, setList] = useState([]);\n\n  const _addItem = item => {\n    item.due = new Date();\n    fetch(todoAPI, {\n      method: \"post\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(item)\n    }).then(response => response.json()).then(savedItem => {\n      setList([...list, savedItem]);\n    }).catch(console.error);\n  };\n\n  const _deleteTask = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      let url = `${todoAPI}/${id}`;\n      fetch(url, {\n        method: \"delete\",\n        mode: \"cors\"\n      }).then(response => response.json());\n    }\n  };\n\n  const _toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let url = `${todoAPI}/${id}`;\n      fetch(url, {\n        method: \"put\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(item)\n      }).then(response => response.json()).then(savedItem => {\n        setList(list.map(listItem => listItem._id === item._id ? savedItem : listItem));\n      }).catch(console.error);\n    }\n  };\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: \"get\",\n      mode: \"cors\"\n    }).then(data => data.json()).then(data => setList(data.results)).catch(console.error);\n  };\n\n  useEffect(_getTodoItems, []); // useEffect(() => {\n  //   let list2 = [\n  //     {\n  //       _id: 1,\n  //       complete: false,\n  //       text: \"Clean the Kitchen\",\n  //       difficulty: 3,\n  //       assignee: \"Person A\",\n  //     },\n  //     {\n  //       _id: 2,\n  //       complete: false,\n  //       text: \"Do the Laundry\",\n  //       difficulty: 2,\n  //       assignee: \"Person A\",\n  //     },\n  //     {\n  //       _id: 3,\n  //       complete: false,\n  //       text: \"Walk the Dog\",\n  //       difficulty: 4,\n  //       assignee: \"Person B\",\n  //     },\n  //     {\n  //       _id: 4,\n  //       complete: true,\n  //       text: \"Do Homework\",\n  //       difficulty: 3,\n  //       assignee: \"Person C\",\n  //     },\n  //     {\n  //       _id: 5,\n  //       complete: false,\n  //       text: \"Take a Nap\",\n  //       difficulty: 1,\n  //       assignee: \"Person B\",\n  //     },\n  //   ];\n  //   setList(list2);\n  // }, []);\n\n  useEffect(() => {\n    //complete/incomplete\n    document.title = \"To-do List \" + list.filter(item => !item.complete).length + \" Completed/ \" + list.filter(item => item.complete).length + \" Incompleted\";\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    key: \"0\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Alert.Heading, {\n    style: {\n      \"text-align\": \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"There are \", list.filter(item => !item.complete).length, \" Items To Complete\")))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    handleSubmit: _addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: _toggleComplete,\n    handleDelete: _deleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/components/todo/todo.js"],"names":["React","TodoForm","TodoList","useState","useEffect","Alert","Container","Row","Col","todoAPI","ToDo","props","list","setList","_addItem","item","due","Date","fetch","method","mode","cache","headers","body","JSON","stringify","then","response","json","savedItem","catch","console","error","_deleteTask","id","filter","i","_id","url","_toggleComplete","complete","map","listItem","_getTodoItems","data","results","document","title","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TodoForm from \"./form.js\";\nimport TodoList from \"./list.js\";\nimport { useState, useEffect } from \"react\";\nimport { Alert, Container, Row, Col } from \"react-bootstrap\";\n\nimport \"./todo.scss\";\nconst todoAPI = \"https://api-js401.herokuapp.com/api/v1/todo\";\n\nfunction ToDo(props) {\n  const [list, setList] = useState([]);\n\n  const _addItem = (item) => {\n    item.due = new Date();\n    fetch(todoAPI, {\n      method: \"post\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(item),\n    })\n      .then((response) => response.json())\n      .then((savedItem) => {\n        setList([...list, savedItem]);\n      })\n      .catch(console.error);\n  };\n  const _deleteTask = (id)=>{\n    let item = list.filter((i) => i._id === id)[0] || {};\n    if(item._id){\n      let url = `${todoAPI}/${id}`;\n      fetch(url, {\n        method: \"delete\",\n        mode: \"cors\",\n      }).then((response) => response.json())\n    }\n   \n  }\n\n  const _toggleComplete = (id) => {\n    let item = list.filter((i) => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n\n      let url = `${todoAPI}/${id}`;\n\n      fetch(url, {\n        method: \"put\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(item),\n      })\n        .then((response) => response.json())\n        .then((savedItem) => {\n          setList(\n            list.map((listItem) =>\n              listItem._id === item._id ? savedItem : listItem\n            )\n          );\n        })\n        .catch(console.error);\n    }\n  };\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: \"get\",\n      mode: \"cors\",\n    })\n      .then((data) => data.json())\n      .then((data) => setList(data.results))\n      .catch(console.error);\n  };\n\n  useEffect(_getTodoItems, []);\n  // useEffect(() => {\n  //   let list2 = [\n  //     {\n  //       _id: 1,\n  //       complete: false,\n  //       text: \"Clean the Kitchen\",\n  //       difficulty: 3,\n  //       assignee: \"Person A\",\n  //     },\n  //     {\n  //       _id: 2,\n  //       complete: false,\n  //       text: \"Do the Laundry\",\n  //       difficulty: 2,\n  //       assignee: \"Person A\",\n  //     },\n  //     {\n  //       _id: 3,\n  //       complete: false,\n  //       text: \"Walk the Dog\",\n  //       difficulty: 4,\n  //       assignee: \"Person B\",\n  //     },\n  //     {\n  //       _id: 4,\n  //       complete: true,\n  //       text: \"Do Homework\",\n  //       difficulty: 3,\n  //       assignee: \"Person C\",\n  //     },\n  //     {\n  //       _id: 5,\n  //       complete: false,\n  //       text: \"Take a Nap\",\n  //       difficulty: 1,\n  //       assignee: \"Person B\",\n  //     },\n  //   ];\n  //   setList(list2);\n  // }, []);\n\n  useEffect(() => {\n    //complete/incomplete\n    document.title =\n      \"To-do List \" +\n      list.filter((item) => !item.complete).length +\n      \" Completed/ \" +\n      list.filter((item) => item.complete).length +\n      \" Incompleted\";\n  });\n\n  return (\n    <Container fluid=\"md\">\n      <br />\n      <Row xs={7}>\n        <Col>\n          <Alert key=\"0\" variant=\"primary\">\n            <Alert.Heading style={{ \"text-align\": \"center\" }}>\n              There are {list.filter((item) => !item.complete).length} Items To\n              Complete\n            </Alert.Heading>\n          </Alert>\n        </Col>\n      </Row>\n\n      <section className=\"todo\">\n        <Row>\n          <Col xs={5}>\n            <TodoForm handleSubmit={_addItem} />\n          </Col>\n\n          <Col>\n            <TodoList list={list} handleComplete={_toggleComplete}  handleDelete={_deleteTask}/>\n          </Col>\n        </Row>\n      </section>\n    </Container>\n  );\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}