{"ast":null,"code":"var _jsxFileName = \"/home/boshra/401labs/hooks/todo/src/components/todo/todo.js\";\nimport React from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport { useState, useEffect } from 'react';\nimport './todo.scss'; // class ToDo extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       list: [],\n//     };\n//   }\n//   addItem = (item) => {\n//     item._id = Math.random();\n//     item.complete = false;\n//     this.setState({ list: [...this.state.list, item]});\n//   };\n//   toggleComplete = id => {\n//     let item = this.state.list.filter(i => i._id === id)[0] || {};\n//     if (item._id) {\n//       item.complete = !item.complete;\n//       let list = this.state.list.map(listItem => listItem._id === item._id ? item : listItem);\n//       this.setState({list});\n//     }\n//   };\n//   componentDidMount() {\n//     let list = [\n//       { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n//       { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n//       { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n//       { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n//       { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n//     ];\n//     this.setState({list});\n//   }\n//   render() {\n//     return (\n//       <>\n//         <header>\n//           <h2>\n//           There are {this.state.list.filter(item => !item.complete).length} Items To Complete\n//           </h2>\n//         </header>\n//         <section className=\"todo\">\n//           <div>\n//             <TodoForm handleSubmit={this.addItem} />\n//           </div>\n//           <div>\n//             <TodoList\n//               list={this.state.list}\n//               handleComplete={this.toggleComplete}\n//             />\n//           </div>\n//         </section>\n//       </>\n//     );\n//   }\n// }\n\nfunction ToDo(props) {\n  const [list, setList] = useState([]);\n\n  const addItem = item => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n  const toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let list = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList({\n        list\n      });\n    }\n  };\n\n  useEffect(() => {\n    let list = [{\n      _id: 1,\n      complete: false,\n      text: 'Clean the Kitchen',\n      difficulty: 3,\n      assignee: 'Person A'\n    }, {\n      _id: 2,\n      complete: false,\n      text: 'Do the Laundry',\n      difficulty: 2,\n      assignee: 'Person A'\n    }, {\n      _id: 3,\n      complete: false,\n      text: 'Walk the Dog',\n      difficulty: 4,\n      assignee: 'Person B'\n    }, {\n      _id: 4,\n      complete: true,\n      text: 'Do Homework',\n      difficulty: 3,\n      assignee: 'Person C'\n    }, {\n      _id: 5,\n      complete: false,\n      text: 'Take a Nap',\n      difficulty: 1,\n      assignee: 'Person B'\n    }];\n    setList({\n      list\n    });\n  }, []);\n  useEffect(() => {\n    document.title = \"To DO- complete: \" + list.filter(item => !item.complete).length + \"/\" + \"Incomplete: \" + list.filter(item => item.complete).length;\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"There are \", list.filter(item => !item.complete).length, \" Items To Complete\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    handleSubmit: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: toggleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/components/todo/todo.js"],"names":["React","TodoForm","TodoList","useState","useEffect","ToDo","props","list","setList","addItem","item","_id","Math","random","complete","toggleComplete","id","filter","i","map","listItem","text","difficulty","assignee","document","title","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport {useState, useEffect} from 'react'\n\nimport './todo.scss';\n\n// class ToDo extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       list: [],\n//     };\n//   }\n\n//   addItem = (item) => {\n//     item._id = Math.random();\n//     item.complete = false;\n//     this.setState({ list: [...this.state.list, item]});\n//   };\n\n//   toggleComplete = id => {\n\n//     let item = this.state.list.filter(i => i._id === id)[0] || {};\n\n//     if (item._id) {\n//       item.complete = !item.complete;\n//       let list = this.state.list.map(listItem => listItem._id === item._id ? item : listItem);\n//       this.setState({list});\n//     }\n\n//   };\n\n//   componentDidMount() {\n//     let list = [\n//       { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n//       { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n//       { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n//       { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n//       { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n//     ];\n\n//     this.setState({list});\n//   }\n\n//   render() {\n//     return (\n//       <>\n//         <header>\n//           <h2>\n//           There are {this.state.list.filter(item => !item.complete).length} Items To Complete\n//           </h2>\n//         </header>\n\n//         <section className=\"todo\">\n\n//           <div>\n//             <TodoForm handleSubmit={this.addItem} />\n//           </div>\n\n//           <div>\n//             <TodoList\n//               list={this.state.list}\n//               handleComplete={this.toggleComplete}\n//             />\n//           </div>\n//         </section>\n//       </>\n//     );\n//   }\n// }\n\n\nfunction ToDo (props){\n\n  const [list, setList] = useState([])\n\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList( [...list, item]);\n  };\n\n const toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let list = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList({list});\n    }\n\n  };\n\n  useEffect( ()=>{\n    let list =  [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n    ];\n    setList({list});\n  },[]);\n\n  useEffect( () => {\n    document.title =\n      \"To DO- complete: \" +\n      list.filter((item) => !item.complete).length +\n      \"/\" +\n      \"Incomplete: \" +\n      list.filter((item) => item.complete).length;\n  });\n\n    return (\n      <>\n        <header>\n          <h2>\n          There are {list.filter(item => !item.complete).length} Items To Complete\n          </h2>\n        </header>\n\n        <section className=\"todo\">\n\n          <div>\n            <TodoForm handleSubmit={addItem} />\n          </div>\n\n          <div>\n            <TodoList\n              list={list}\n              handleComplete={toggleComplete}\n            />\n          </div>\n        </section>\n      </>\n    );\n  \n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}