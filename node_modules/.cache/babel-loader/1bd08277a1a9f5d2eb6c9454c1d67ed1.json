{"ast":null,"code":"import { useState } from 'react';\nimport axios from 'axios';\n\nconst useAjax = url => {\n  const _fetchAPI = async (method, url, item) => {\n    const response = await axios({\n      method: method,\n      url: url,\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: item\n    });\n    return response.data;\n  };\n\n  const _addItem = async item => {\n    try {\n      await _fetchAPI('post', url, item);\n    } catch (e) {\n      console.error;\n    }\n  };\n\n  const _toggleComplete = async id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let urlPut = `${url}/${id}`;\n      await _fetchItems('put', urlPut, item); // fetch(url, {\n      //   method: \"put\",\n      //   mode: \"cors\",\n      //   cache: \"no-cache\",\n      //   headers: { \"Content-Type\": \"application/json\" },\n      //   body: JSON.stringify(item),\n      // })\n      //   .then((response) => response.json())\n      //   .then((savedItem) => {\n      //     setList(\n      //       list.map((listItem) =>\n      //         listItem._id === item._id ? savedItem : listItem\n      //       )\n      //     );\n      //   })\n      //   .catch(console.error);\n    }\n  };\n\n  const _getTodoItems = () => {\n    try {\n      return _fetchAPI('get', url);\n    } catch (e) {\n      console.error;\n    }\n  };\n\n  const _deleteTask = async id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      let urlDelete = `${url}/${id}`;\n      let result = await _fetchAPI('delete', urlDelete, item);\n      let resultJson = await result.json();\n      const newList = list.filter(item => item !== resultJson);\n      setList(newList);\n\n      _getTodoItems();\n    }\n  };\n\n  return [_addItem, _toggleComplete, _getTodoItems, _deleteTask];\n};\n\nexport default useAjax;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/customHooks/Ajax.js"],"names":["useState","axios","useAjax","url","_fetchAPI","method","item","response","mode","cache","headers","data","_addItem","e","console","error","_toggleComplete","id","list","filter","i","_id","complete","urlPut","_fetchItems","_getTodoItems","_deleteTask","urlDelete","result","resultJson","json","newList","setList"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAIC,GAAD,IAAS;AACvB,QAAMC,SAAS,GAAE,OAAOC,MAAP,EAAeF,GAAf,EAAoBG,IAApB,KAA6B;AAC5C,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAAC;AAC3BI,MAAAA,MAAM,EAAEA,MADmB;AAE3BF,MAAAA,GAAG,EAAEA,GAFsB;AAG3BK,MAAAA,IAAI,EAAE,MAHqB;AAI3BC,MAAAA,KAAK,EAAE,UAJoB;AAK3BC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OALkB;AAM3BC,MAAAA,IAAI,EAAEL;AANqB,KAAD,CAA5B;AAQA,WAAOC,QAAQ,CAACI,IAAhB;AACD,GAVD;;AAYA,QAAMC,QAAQ,GAAG,MAAON,IAAP,IAAgB;AAC/B,QAAG;AACD,YAAMF,SAAS,CAAC,MAAD,EAASD,GAAT,EAAcG,IAAd,CAAf;AACD,KAFD,CAEE,OAAMO,CAAN,EAAQ;AAAEC,MAAAA,OAAO,CAACC,KAAR;AAAc;AAC3B,GAJD;;AAMA,QAAMC,eAAe,GAAG,MAAMC,EAAN,IAAa;AACnC,QAAIX,IAAI,GAAGY,IAAI,CAACC,MAAL,CAAaC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUJ,EAA7B,EAAiC,CAAjC,KAAuC,EAAlD;;AAEA,QAAIX,IAAI,CAACe,GAAT,EAAc;AACZf,MAAAA,IAAI,CAACgB,QAAL,GAAgB,CAAChB,IAAI,CAACgB,QAAtB;AAEA,UAAIC,MAAM,GAAI,GAAEpB,GAAI,IAAGc,EAAG,EAA1B;AACA,YAAMO,WAAW,CAAC,KAAD,EAAQD,MAAR,EAAgBjB,IAAhB,CAAjB,CAJY,CAMZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,GA1BD;;AA4BA,QAAMmB,aAAa,GAAG,MAAM;AAC3B,QAAG;AACD,aAAQrB,SAAS,CAAC,KAAD,EAAQD,GAAR,CAAjB;AACD,KAFD,CAEE,OAAMU,CAAN,EAAQ;AAAEC,MAAAA,OAAO,CAACC,KAAR;AAAc;AAC1B,GAJD;;AAMA,QAAMW,WAAW,GAAI,MAAOT,EAAP,IAAY;AAC/B,QAAIX,IAAI,GAAGY,IAAI,CAACC,MAAL,CAAaC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUJ,EAA7B,EAAiC,CAAjC,KAAuC,EAAlD;;AACA,QAAIX,IAAI,CAACe,GAAT,EAAc;AACZ,UAAIM,SAAS,GAAI,GAAExB,GAAI,IAAGc,EAAG,EAA7B;AACA,UAAIW,MAAM,GAAG,MAAMxB,SAAS,CAAC,QAAD,EAAWuB,SAAX,EAAsBrB,IAAtB,CAA5B;AACA,UAAIuB,UAAU,GAAG,MAAMD,MAAM,CAACE,IAAP,EAAvB;AACA,YAAMC,OAAO,GAAGb,IAAI,CAACC,MAAL,CAAYb,IAAI,IAAIA,IAAI,KAAKuB,UAA7B,CAAhB;AACEG,MAAAA,OAAO,CAACD,OAAD,CAAP;;AACAN,MAAAA,aAAa;AAChB;AACJ,GAVC;;AAYA,SAAO,CAAEb,QAAF,EAAYI,eAAZ,EAA6BS,aAA7B,EAA4CC,WAA5C,CAAP;AACD,CAlED;;AAoEA,eAAexB,OAAf","sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\n\nconst useAjax = (url) => {\n  const _fetchAPI= async (method, url, item) => {\n    const response = await axios({\n      method: method,\n      url: url,\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: { 'Content-Type': 'application/json' },\n      data: item,\n    });\n    return response.data;\n  };\n\n  const _addItem = async (item) => {\n    try{\n      await _fetchAPI('post', url, item);\n    } catch(e){ console.error}\n  };\n  \n  const _toggleComplete = async(id) => {\n    let item = list.filter((i) => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n\n      let urlPut = `${url}/${id}`;\n      await _fetchItems('put', urlPut, item);\n\n      // fetch(url, {\n      //   method: \"put\",\n      //   mode: \"cors\",\n      //   cache: \"no-cache\",\n      //   headers: { \"Content-Type\": \"application/json\" },\n      //   body: JSON.stringify(item),\n      // })\n      //   .then((response) => response.json())\n      //   .then((savedItem) => {\n      //     setList(\n      //       list.map((listItem) =>\n      //         listItem._id === item._id ? savedItem : listItem\n      //       )\n      //     );\n      //   })\n      //   .catch(console.error);\n    }\n  };\n\n  const _getTodoItems = () => {\n   try{\n     return  _fetchAPI('get', url)\n   } catch(e){ console.error}\n  };\n\n  const _deleteTask =  async (id)=>{\n    let item = list.filter((i) => i._id === id)[0] || {};\n    if (item._id) {\n      let urlDelete = `${url}/${id}`;\n      let result = await _fetchAPI('delete', urlDelete, item);\n      let resultJson = await result.json();\n      const newList = list.filter(item => item !== resultJson)\n        setList(newList)\n        _getTodoItems()\n    }\n}\n\n  return [ _addItem, _toggleComplete, _getTodoItems, _deleteTask ];\n};\n\nexport default useAjax;"]},"metadata":{},"sourceType":"module"}