{"ast":null,"code":"import _toConsumableArray from\"/home/boshra/401labs/hooks/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/boshra/401labs/hooks/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import TodoForm from'./form.js';import TodoList from'./list.js';import{useState,useEffect}from'react';import'./todo.scss';// class ToDo extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       list: [],\n//     };\n//   }\n//   addItem = (item) => {\n//     item._id = Math.random();\n//     item.complete = false;\n//     this.setState({ list: [...this.state.list, item]});\n//   };\n//   toggleComplete = id => {\n//     let item = this.state.list.filter(i => i._id === id)[0] || {};\n//     if (item._id) {\n//       item.complete = !item.complete;\n//       let list = this.state.list.map(listItem => listItem._id === item._id ? item : listItem);\n//       this.setState({list});\n//     }\n//   };\n//   componentDidMount() {\n//     let list = [\n//       { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n//       { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n//       { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n//       { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n//       { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n//     ];\n//     this.setState({list});\n//   }\n//   render() {\n//     return (\n//       <>\n//         <header>\n//           <h2>\n//           There are {this.state.list.filter(item => !item.complete).length} Items To Complete\n//           </h2>\n//         </header>\n//         <section className=\"todo\">\n//           <div>\n//             <TodoForm handleSubmit={this.addItem} />\n//           </div>\n//           <div>\n//             <TodoList\n//               list={this.state.list}\n//               handleComplete={this.toggleComplete}\n//             />\n//           </div>\n//         </section>\n//       </>\n//     );\n//   }\n// }\nfunction ToDo(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),list=_useState2[0],setList=_useState2[1];var addItem=function addItem(item){item._id=Math.random();item.complete=false;setList([].concat(_toConsumableArray(list),[item]));};var toggleComplete=function toggleComplete(id){var item=list.filter(function(i){return i._id===id;})[0]||{};if(item._id){item.complete=!item.complete;var list1=list.map(function(listItem){return listItem._id===item._id?item:listItem;});setList(list1);}};useEffect(function(){var list2=[{_id:1,complete:false,text:'Clean the Kitchen',difficulty:3,assignee:'Person A'},{_id:2,complete:false,text:'Do the Laundry',difficulty:2,assignee:'Person A'},{_id:3,complete:false,text:'Walk the Dog',difficulty:4,assignee:'Person B'},{_id:4,complete:true,text:'Do Homework',difficulty:3,assignee:'Person C'},{_id:5,complete:false,text:'Take a Nap',difficulty:1,assignee:'Person B'}];setList(list2);},[]);useEffect(function(){//complete/incomplete\ndocument.title=\"To-do List \"+list.filter(function(item){return!item.complete;}).length+\" Completed/ \"+list.filter(function(item){return item.complete;}).length+\" Incompleted\";});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"header\",null,/*#__PURE__*/React.createElement(\"h2\",null,console.log('list is here',list),\"There are \",list.filter(function(item){return!item.complete;}).length,\" Items To Complete\")),/*#__PURE__*/React.createElement(\"section\",{className:\"todo\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(TodoForm,{handleSubmit:addItem})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(TodoList,{list:list,handleComplete:toggleComplete}))));}export default ToDo;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/components/todo/todo.js"],"names":["React","TodoForm","TodoList","useState","useEffect","ToDo","props","list","setList","addItem","item","_id","Math","random","complete","toggleComplete","id","filter","i","list1","map","listItem","list2","text","difficulty","assignee","document","title","length","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport {useState, useEffect} from 'react'\n\nimport './todo.scss';\n\n// class ToDo extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       list: [],\n//     };\n//   }\n\n//   addItem = (item) => {\n//     item._id = Math.random();\n//     item.complete = false;\n//     this.setState({ list: [...this.state.list, item]});\n//   };\n\n//   toggleComplete = id => {\n\n//     let item = this.state.list.filter(i => i._id === id)[0] || {};\n\n//     if (item._id) {\n//       item.complete = !item.complete;\n//       let list = this.state.list.map(listItem => listItem._id === item._id ? item : listItem);\n//       this.setState({list});\n//     }\n\n//   };\n\n//   componentDidMount() {\n//     let list = [\n//       { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n//       { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n//       { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n//       { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n//       { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n//     ];\n\n//     this.setState({list});\n//   }\n\n//   render() {\n//     return (\n//       <>\n//         <header>\n//           <h2>\n//           There are {this.state.list.filter(item => !item.complete).length} Items To Complete\n//           </h2>\n//         </header>\n\n//         <section className=\"todo\">\n\n//           <div>\n//             <TodoForm handleSubmit={this.addItem} />\n//           </div>\n\n//           <div>\n//             <TodoList\n//               list={this.state.list}\n//               handleComplete={this.toggleComplete}\n//             />\n//           </div>\n//         </section>\n//       </>\n//     );\n//   }\n// }\n\n\nfunction ToDo (props){\n\n  const [list, setList] = useState([])\n\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n const toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let list1 = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(list1);\n    }\n\n  };\n\n  useEffect( ()=>{\n    let list2 =  [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n    ];\n    setList(list2);\n  },[]);\n\n  useEffect( () => {\n    //complete/incomplete\n    document.title = \"To-do List \" +\n      list.filter((item) => !item.complete).length + \" Completed/ \" +\n      list.filter((item) => item.complete).length + \" Incompleted\";\n  });\n\n    return (\n      <>\n        <header>\n          <h2>\n            {console.log('list is here',list)}\n          There are {list.filter((item) => !item.complete).length} Items To\n          Complete\n          </h2>\n        </header>\n\n        <section className=\"todo\">\n\n          <div>\n            <TodoForm handleSubmit={addItem} />\n          </div>\n\n          <div>\n            <TodoList\n              list={list}\n              handleComplete={toggleComplete}\n            />\n          </div>\n        </section>\n      </>\n    );\n  \n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}