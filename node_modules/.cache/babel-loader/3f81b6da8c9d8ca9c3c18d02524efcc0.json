{"ast":null,"code":"var _jsxFileName = \"/home/boshra/401labs/hooks/todo/src/components/todo/todo.js\";\nimport React from \"react\";\nimport TodoForm from \"./form.js\";\nimport TodoList from \"./list.js\";\nimport { useState, useEffect } from \"react\";\nimport { Alert, Container, Row, Col } from \"react-bootstrap\";\nimport \"./todo.scss\";\nconst todoAPI = \"https://api-js401.herokuapp.com/api/v1/todo\";\n\nfunction ToDo(props) {\n  const [list, setList] = useState([]);\n\n  const _addItem = item => {\n    item.due = new Date();\n    fetch(todoAPI, {\n      method: \"post\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(item)\n    }).then(response => response.json()).then(savedItem => {\n      setList([...list, savedItem]);\n    }).catch(console.error);\n  }; // const toggleComplete = (id) => {\n  //   let item = list.filter((i) => i._id === id)[0] || {};\n  //   if (item._id) {\n  //     item.complete = !item.complete;\n  //     let list1 = list.map((listItem) =>\n  //       listItem._id === item._id ? item : listItem\n  //     );\n  //     setList(list1);\n  //   }\n  // };\n\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: \"get\",\n      mode: \"cors\"\n    }).then(data => data.json()).then(data => setList(data.results)).catch(console.error);\n  };\n\n  useEffect(_getTodoItems, []); // useEffect(() => {\n  //   let list2 = [\n  //     {\n  //       _id: 1,\n  //       complete: false,\n  //       text: \"Clean the Kitchen\",\n  //       difficulty: 3,\n  //       assignee: \"Person A\",\n  //     },\n  //     {\n  //       _id: 2,\n  //       complete: false,\n  //       text: \"Do the Laundry\",\n  //       difficulty: 2,\n  //       assignee: \"Person A\",\n  //     },\n  //     {\n  //       _id: 3,\n  //       complete: false,\n  //       text: \"Walk the Dog\",\n  //       difficulty: 4,\n  //       assignee: \"Person B\",\n  //     },\n  //     {\n  //       _id: 4,\n  //       complete: true,\n  //       text: \"Do Homework\",\n  //       difficulty: 3,\n  //       assignee: \"Person C\",\n  //     },\n  //     {\n  //       _id: 5,\n  //       complete: false,\n  //       text: \"Take a Nap\",\n  //       difficulty: 1,\n  //       assignee: \"Person B\",\n  //     },\n  //   ];\n  //   setList(list2);\n  // }, []);\n\n  useEffect(() => {\n    //complete/incomplete\n    document.title = \"To-do List \" + list.filter(item => !item.complete).length + \" Completed/ \" + list.filter(item => item.complete).length + \" Incompleted\";\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    key: \"0\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Alert.Heading, {\n    style: {\n      \"text-align\": \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"There are \", list.filter(item => !item.complete).length, \" Items To Complete\")))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    handleSubmit: _addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: toggleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/components/todo/todo.js"],"names":["React","TodoForm","TodoList","useState","useEffect","Alert","Container","Row","Col","todoAPI","ToDo","props","list","setList","_addItem","item","due","Date","fetch","method","mode","cache","headers","body","JSON","stringify","then","response","json","savedItem","catch","console","error","_getTodoItems","data","results","document","title","filter","complete","length","toggleComplete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,iBAA3C;AAEA,OAAO,aAAP;AACA,MAAMC,OAAO,GAAG,6CAAhB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMW,QAAQ,GAAIC,IAAD,IAAU;AACzBA,IAAAA,IAAI,CAACC,GAAL,GAAW,IAAIC,IAAJ,EAAX;AACAC,IAAAA,KAAK,CAACT,OAAD,EAAU;AACbU,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,IAAI,EAAE,MAFO;AAGbC,MAAAA,KAAK,EAAE,UAHM;AAIbC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAJI;AAKbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf;AALO,KAAV,CAAL,CAOGW,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQGF,IARH,CAQSG,SAAD,IAAe;AACnBhB,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUiB,SAAV,CAAD,CAAP;AACD,KAVH,EAWGC,KAXH,CAWSC,OAAO,CAACC,KAXjB;AAYD,GAdD,CAHmB,CAmBnB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMC,aAAa,GAAG,MAAM;AAC1Bf,IAAAA,KAAK,CAACT,OAAD,EAAU;AACbU,MAAAA,MAAM,EAAE,KADK;AAEbC,MAAAA,IAAI,EAAE;AAFO,KAAV,CAAL,CAIGM,IAJH,CAISQ,IAAD,IAAUA,IAAI,CAACN,IAAL,EAJlB,EAKGF,IALH,CAKSQ,IAAD,IAAUrB,OAAO,CAACqB,IAAI,CAACC,OAAN,CALzB,EAMGL,KANH,CAMSC,OAAO,CAACC,KANjB;AAOD,GARD;;AAUA5B,EAAAA,SAAS,CAAC6B,aAAD,EAAgB,EAAhB,CAAT,CAxCmB,CAyCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA7B,EAAAA,SAAS,CAAC,MAAM;AACd;AACAgC,IAAAA,QAAQ,CAACC,KAAT,GACE,gBACAzB,IAAI,CAAC0B,MAAL,CAAavB,IAAD,IAAU,CAACA,IAAI,CAACwB,QAA5B,EAAsCC,MADtC,GAEA,cAFA,GAGA5B,IAAI,CAAC0B,MAAL,CAAavB,IAAD,IAAUA,IAAI,CAACwB,QAA3B,EAAqCC,MAHrC,GAIA,cALF;AAMD,GARQ,CAAT;AAUA,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,GAAX;AAAe,IAAA,OAAO,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,OAAP;AAAe,IAAA,KAAK,EAAE;AAAE,oBAAc;AAAhB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACa5B,IAAI,CAAC0B,MAAL,CAAavB,IAAD,IAAU,CAACA,IAAI,CAACwB,QAA5B,EAAsCC,MADnD,uBADF,CADF,CADF,CAFF,eAaE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,YAAY,EAAE1B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,IAAhB;AAAsB,IAAA,cAAc,EAAE6B,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF,CAbF,CADF;AA2BD;;AAED,eAAe/B,IAAf","sourcesContent":["import React from \"react\";\nimport TodoForm from \"./form.js\";\nimport TodoList from \"./list.js\";\nimport { useState, useEffect } from \"react\";\nimport { Alert, Container, Row, Col } from \"react-bootstrap\";\n\nimport \"./todo.scss\";\nconst todoAPI = \"https://api-js401.herokuapp.com/api/v1/todo\";\n\nfunction ToDo(props) {\n  const [list, setList] = useState([]);\n\n  const _addItem = (item) => {\n    item.due = new Date();\n    fetch(todoAPI, {\n      method: \"post\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(item),\n    })\n      .then((response) => response.json())\n      .then((savedItem) => {\n        setList([...list, savedItem]);\n      })\n      .catch(console.error);\n  };\n\n  // const toggleComplete = (id) => {\n  //   let item = list.filter((i) => i._id === id)[0] || {};\n\n  //   if (item._id) {\n  //     item.complete = !item.complete;\n  //     let list1 = list.map((listItem) =>\n  //       listItem._id === item._id ? item : listItem\n  //     );\n  //     setList(list1);\n  //   }\n  // };\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: \"get\",\n      mode: \"cors\",\n    })\n      .then((data) => data.json())\n      .then((data) => setList(data.results))\n      .catch(console.error);\n  };\n\n  useEffect(_getTodoItems, []);\n  // useEffect(() => {\n  //   let list2 = [\n  //     {\n  //       _id: 1,\n  //       complete: false,\n  //       text: \"Clean the Kitchen\",\n  //       difficulty: 3,\n  //       assignee: \"Person A\",\n  //     },\n  //     {\n  //       _id: 2,\n  //       complete: false,\n  //       text: \"Do the Laundry\",\n  //       difficulty: 2,\n  //       assignee: \"Person A\",\n  //     },\n  //     {\n  //       _id: 3,\n  //       complete: false,\n  //       text: \"Walk the Dog\",\n  //       difficulty: 4,\n  //       assignee: \"Person B\",\n  //     },\n  //     {\n  //       _id: 4,\n  //       complete: true,\n  //       text: \"Do Homework\",\n  //       difficulty: 3,\n  //       assignee: \"Person C\",\n  //     },\n  //     {\n  //       _id: 5,\n  //       complete: false,\n  //       text: \"Take a Nap\",\n  //       difficulty: 1,\n  //       assignee: \"Person B\",\n  //     },\n  //   ];\n  //   setList(list2);\n  // }, []);\n\n  useEffect(() => {\n    //complete/incomplete\n    document.title =\n      \"To-do List \" +\n      list.filter((item) => !item.complete).length +\n      \" Completed/ \" +\n      list.filter((item) => item.complete).length +\n      \" Incompleted\";\n  });\n\n  return (\n    <Container fluid=\"md\">\n      <br />\n      <Row xs={7}>\n        <Col>\n          <Alert key=\"0\" variant=\"primary\">\n            <Alert.Heading style={{ \"text-align\": \"center\" }}>\n              There are {list.filter((item) => !item.complete).length} Items To\n              Complete\n            </Alert.Heading>\n          </Alert>\n        </Col>\n      </Row>\n\n      <section className=\"todo\">\n        <Row>\n          <Col xs={5}>\n            <TodoForm handleSubmit={_addItem} />\n          </Col>\n\n          <Col>\n            <TodoList list={list} handleComplete={toggleComplete} />\n          </Col>\n        </Row>\n      </section>\n    </Container>\n  );\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}