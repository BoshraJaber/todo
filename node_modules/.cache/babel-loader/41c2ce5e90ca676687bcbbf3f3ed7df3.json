{"ast":null,"code":"import { useState, useContext } from 'react';\nimport { LoginContext } from '../Auth/context';\n\nconst useAjax = props => {\n  const todoAPI = \"https://api-js401.herokuapp.com/api/v1/todo\";\n  const [list, setList] = useState([]);\n  const loginContext = useContext(LoginContext);\n\n  const _addItem = item => {\n    if (loginContext.user.user.type === 'admin' || loginContext.user.user.type === 'editor') {\n      item.due = new Date();\n      fetch(todoAPI, {\n        method: \"post\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(item)\n      }).then(response => response.json()).then(savedItem => {\n        setList([...list, savedItem]);\n      }).catch(console.error);\n    }\n  };\n\n  const _toggleComplete = id => {\n    if (loginContext.user.user.type === 'admin' || loginContext.user.user.type === 'editor') {}\n  };\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: \"get\",\n      mode: \"cors\"\n    }).then(data => data.json()).then(data => setList(data.results)).catch(console.error);\n  };\n\n  const _deleteTask = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      let url = `${todoAPI}/${id}`;\n      fetch(url, {\n        method: 'delete',\n        mode: 'cors'\n      }).then(data => data.json()).then(data => {\n        console.log(data);\n        const newList = list.filter(item => item !== data);\n        setList(newList);\n\n        _getTodoItems();\n      }).catch(console.error);\n    }\n  };\n\n  return [list, _addItem, _toggleComplete, _getTodoItems, _deleteTask];\n};\n\nexport default useAjax;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/customHooks/Ajax.js"],"names":["useState","useContext","LoginContext","useAjax","props","todoAPI","list","setList","loginContext","_addItem","item","user","type","due","Date","fetch","method","mode","cache","headers","body","JSON","stringify","then","response","json","savedItem","catch","console","error","_toggleComplete","id","_getTodoItems","data","results","_deleteTask","filter","i","_id","url","log","newList"],"mappings":"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","sourcesContent":["import { useState,useContext  } from 'react';\nimport { LoginContext } from '../Auth/context';\n\nconst useAjax = (props) => {\n    const todoAPI = \"https://api-js401.herokuapp.com/api/v1/todo\";\n  const [list, setList] = useState([]);\n  const loginContext = useContext(LoginContext);\n\n\n  const _addItem = (item) => {\n    if(loginContext.user.user.type === 'admin' || loginContext.user.user.type === 'editor'){\n      item.due = new Date();\n      fetch(todoAPI, {\n        method: \"post\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(item),\n      })\n        .then((response) => response.json())\n        .then((savedItem) => {\n          setList([...list, savedItem]);\n        })\n        .catch(console.error);\n    } \n  };\n  \n  const _toggleComplete = (id) => {\n    if(loginContext.user.user.type === 'admin' || loginContext.user.user.type === 'editor'){\n\n    }\n\n  };\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: \"get\",\n      mode: \"cors\",\n    })\n      .then((data) => data.json())\n      .then((data) => setList(data.results))\n      .catch(console.error);\n  };\n\n  const _deleteTask =  (id)=>{\n    let item = list.filter((i) => i._id === id)[0] || {};\n    if (item._id) {\n      let url = `${todoAPI}/${id}`;\n      fetch(url, {\n        method: 'delete',\n        mode: 'cors',\n      }).then((data) => data.json())\n      .then((data) =>{\n        console.log(data);\n        const newList = list.filter(item => item !== data)\n\n        setList(newList)\n        _getTodoItems()\n      })\n      .catch(console.error);\n    }\n}\n\n  return [list, _addItem, _toggleComplete, _getTodoItems, _deleteTask ];\n};\n\nexport default useAjax;"]},"metadata":{},"sourceType":"module"}