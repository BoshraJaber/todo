{"ast":null,"code":"var _jsxFileName = \"/home/boshra/401labs/hooks/todo/src/components/todo/todo.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport TodoForm from \"./form.js\";\nimport TodoList from \"./list.js\";\nimport \"./todo.scss\";\n\nconst ToDo = props => {\n  const [list, setList] = useState([]);\n\n  const addItem = item => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]); // this.setState({ list: [...this.state.list, item]});\n  };\n\n  const toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let listGenerated = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(listGenerated);\n    }\n  };\n\n  useEffect(() => {\n    let newList = [{\n      _id: 1,\n      complete: false,\n      text: \"Clean the Kitchen\",\n      difficulty: 3,\n      assignee: \"Person A\"\n    }, {\n      _id: 2,\n      complete: false,\n      text: \"Do the Laundry\",\n      difficulty: 2,\n      assignee: \"Person A\"\n    }, {\n      _id: 3,\n      complete: false,\n      text: \"Walk the Dog\",\n      difficulty: 4,\n      assignee: \"Person B\"\n    }, {\n      _id: 4,\n      complete: true,\n      text: \"Do Homework\",\n      difficulty: 3,\n      assignee: \"Person C\"\n    }, {\n      _id: 5,\n      complete: false,\n      text: \"Take a Nap\",\n      difficulty: 1,\n      assignee: \"Person B\"\n    }];\n    setList(newList);\n  }, []);\n  useEffect(() => {\n    document.title = \"To DO- complete: \" + list.filter(item => !item.complete).length + \"/\" + \"Incomplete: \" + list.filter(item => item.complete).length;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"There are \", list.filter(item => !item.complete).length, \" Items To Complete\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: \"18rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    handleSubmit: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: 7,\n    className: \"list-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: toggleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default ToDo;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/components/todo/todo.js"],"names":["React","useEffect","useState","Navbar","Container","Row","Col","Card","TodoForm","TodoList","ToDo","props","list","setList","addItem","item","_id","Math","random","complete","toggleComplete","id","filter","i","listGenerated","map","listItem","newList","text","difficulty","assignee","document","title","length","width"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport TodoForm from \"./form.js\";\nimport TodoList from \"./list.js\";\n\nimport \"./todo.scss\";\n\nconst ToDo = (props) => {\n  const [list, setList] = useState([]);\n\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n    // this.setState({ list: [...this.state.list, item]});\n  };\n\n  const toggleComplete = (id) => {\n    let item = list.filter((i) => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let listGenerated = list.map((listItem) =>\n        listItem._id === item._id ? item : listItem\n      );\n      setList(listGenerated);\n    }\n  };\n\n  useEffect(() => {\n    let newList = [\n      {\n        _id: 1,\n        complete: false,\n        text: \"Clean the Kitchen\",\n        difficulty: 3,\n        assignee: \"Person A\",\n      },\n      {\n        _id: 2,\n        complete: false,\n        text: \"Do the Laundry\",\n        difficulty: 2,\n        assignee: \"Person A\",\n      },\n      {\n        _id: 3,\n        complete: false,\n        text: \"Walk the Dog\",\n        difficulty: 4,\n        assignee: \"Person B\",\n      },\n      {\n        _id: 4,\n        complete: true,\n        text: \"Do Homework\",\n        difficulty: 3,\n        assignee: \"Person C\",\n      },\n      {\n        _id: 5,\n        complete: false,\n        text: \"Take a Nap\",\n        difficulty: 1,\n        assignee: \"Person B\",\n      },\n    ];\n\n    setList(newList);\n  }, []);\n\n  useEffect(() => {\n    document.title =\n      \"To DO- complete: \" +\n      list.filter((item) => !item.complete).length +\n      \"/\" +\n      \"Incomplete: \" +\n      list.filter((item) => item.complete).length;\n  });\n\n  return (\n    <div className=\"form-container\">\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>\n          There are {list.filter((item) => !item.complete).length} Items To\n          Complete\n        </Navbar.Brand>\n      </Navbar>\n      <br></br>\n      <Container fluid=\"md\">\n        <Row>\n          <Card style={{ width: \"18rem\" }}>\n            <Card.Body>\n              <TodoForm handleSubmit={addItem} />\n            </Card.Body>\n          </Card>\n\n          <Col sm={7} className=\"list-item\">\n            <TodoList list={list} handleComplete={toggleComplete} />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}