{"ast":null,"code":"var _jsxFileName = \"/home/boshra/401labs/hooks/todo/src/components/todo/list.js\";\nimport React from \"react\";\nimport { ListGroup, Card, Badge, Toast } from \"react-bootstrap\";\nimport { If, Then, Else } from \"react-if\";\n\nfunction TodoList(props) {\n  return /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, props.list.map(item => /*#__PURE__*/React.createElement(Toast, {\n    bg: \"light\",\n    key: \"4\",\n    text: \"light\" === \"light\" ? \"dark\" : \"white\",\n    style: {\n      width: \"%\",\n      height: '5px'\n    },\n    className: \"mb-2\",\n    onClose: () => props.handleDelete(item._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => props.handleComplete(item._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Toast.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(If, {\n    condition: item.complete == false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Then, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    pill: true,\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"pending\"), \" \"), /*#__PURE__*/React.createElement(Else, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    pill: true,\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"complete\"), \" \")), item.assignee), /*#__PURE__*/React.createElement(Toast.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, item.text, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }), \"Difficulty: \", item.difficulty)))));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/components/todo/list.js"],"names":["React","ListGroup","Card","Badge","Toast","If","Then","Else","TodoList","props","list","map","item","width","height","handleDelete","_id","handleComplete","complete","assignee","text","difficulty"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,KAAjC,QAA8C,iBAA9C;AACA,SAASC,EAAT,EAAaC,IAAb,EAAmBC,IAAnB,QAA+B,UAA/B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAgBC,IAAD,iBACd,oBAAC,KAAD;AACE,IAAA,EAAE,EAAE,OADN;AAEE,IAAA,GAAG,EAAC,GAFN;AAGE,IAAA,IAAI,EAAE,YAAY,OAAZ,GAAsB,MAAtB,GAA+B,OAHvC;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAeC,MAAAA,MAAM,EAAE;AAAvB,KAJT;AAKE,IAAA,SAAS,EAAC,MALZ;AAME,IAAA,OAAO,EAAE,MAAML,KAAK,CAACM,YAAN,CAAmBH,IAAI,CAACI,GAAxB,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAM,IAAA,OAAO,EAAE,MAAMP,KAAK,CAACQ,cAAN,CAAqBL,IAAI,CAACI,GAA1B,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,EAAD;AAAI,IAAA,SAAS,EAAEJ,IAAI,CAACM,QAAL,IAAiB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,IAAI,MAAX;AAAY,IAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAGO,GAHP,CADF,eAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,IAAI,MAAX;AAAY,IAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAGO,GAHP,CANF,CADF,EAcGN,IAAI,CAACO,QAdR,CADF,eAiBE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,CAACQ,IADR,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,kBAGeR,IAAI,CAACS,UAHpB,CAjBF,CARF,CADD,CADH,CADF;AAsCD;;AAED,eAAeb,QAAf","sourcesContent":["import React from \"react\";\nimport { ListGroup, Card, Badge, Toast } from \"react-bootstrap\";\nimport { If, Then, Else } from \"react-if\";\n\nfunction TodoList(props) {\n  return (\n    <ListGroup>\n      {props.list.map((item) => (\n        <Toast\n          bg={\"light\"}\n          key=\"4\"\n          text={\"light\" === \"light\" ? \"dark\" : \"white\"}\n          style={{ width: \"%\" , height: '5px'}}\n          className=\"mb-2\"\n          onClose={() => props.handleDelete(item._id)}\n        >\n          <span onClick={() => props.handleComplete(item._id)} >\n            <Toast.Header>\n              <If condition={item.complete == false}>\n                <Then>\n                <Badge pill variant=\"success\">\n                pending\n              </Badge>{\" \"}\n                </Then>\n                <Else>\n                <Badge pill variant=\"danger\">\n                complete\n              </Badge>{\" \"}\n                </Else>\n              </If>\n             \n              {item.assignee}\n            </Toast.Header>\n            <Toast.Body>\n              {item.text}\n              <br />\n              Difficulty: {item.difficulty}\n            </Toast.Body>\n          </span>\n        </Toast>\n      ))}\n    </ListGroup>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}