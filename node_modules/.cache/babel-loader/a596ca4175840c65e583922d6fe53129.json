{"ast":null,"code":"var _jsxFileName = \"/home/boshra/401labs/hooks/todo/src/components/todo/todo.js\";\nimport React from \"react\";\nimport TodoForm from \"./form.js\";\nimport TodoList from \"./list.js\";\nimport { useState, useEffect } from \"react\";\nimport { Alert, Container, Row, Col } from \"react-bootstrap\";\nimport \"./todo.scss\";\nconst todoAPI = \"https://api-js401.herokuapp.com/api/v1/todo\";\n\nfunction ToDo(props) {\n  const [list, setList] = useState([]); // const addItem = (item) => {\n  //   item._id = Math.random();\n  //   item.complete = false;\n  //   setList([...list, item]);\n  // };\n\n  const toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let list1 = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(list1);\n    }\n  };\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: \"get\",\n      mode: \"cors\"\n    }).then(data => data.json()).then(data => setList(data.results)).catch(console.error);\n  };\n\n  useEffect(_getTodoItems, []); // useEffect(() => {\n  //   let list2 = [\n  //     {\n  //       _id: 1,\n  //       complete: false,\n  //       text: \"Clean the Kitchen\",\n  //       difficulty: 3,\n  //       assignee: \"Person A\",\n  //     },\n  //     {\n  //       _id: 2,\n  //       complete: false,\n  //       text: \"Do the Laundry\",\n  //       difficulty: 2,\n  //       assignee: \"Person A\",\n  //     },\n  //     {\n  //       _id: 3,\n  //       complete: false,\n  //       text: \"Walk the Dog\",\n  //       difficulty: 4,\n  //       assignee: \"Person B\",\n  //     },\n  //     {\n  //       _id: 4,\n  //       complete: true,\n  //       text: \"Do Homework\",\n  //       difficulty: 3,\n  //       assignee: \"Person C\",\n  //     },\n  //     {\n  //       _id: 5,\n  //       complete: false,\n  //       text: \"Take a Nap\",\n  //       difficulty: 1,\n  //       assignee: \"Person B\",\n  //     },\n  //   ];\n  //   setList(list2);\n  // }, []);\n\n  useEffect(() => {\n    //complete/incomplete\n    document.title = \"To-do List \" + list.filter(item => !item.complete).length + \" Completed/ \" + list.filter(item => item.complete).length + \" Incompleted\";\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    key: \"0\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Alert.Heading, {\n    style: {\n      \"text-align\": \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"There are \", list.filter(item => !item.complete).length, \" Items To Complete\")))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    handleSubmit: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: toggleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/components/todo/todo.js"],"names":["React","TodoForm","TodoList","useState","useEffect","Alert","Container","Row","Col","todoAPI","ToDo","props","list","setList","toggleComplete","id","item","filter","i","_id","complete","list1","map","listItem","_getTodoItems","fetch","method","mode","then","data","json","results","catch","console","error","document","title","length","addItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TodoForm from \"./form.js\";\nimport TodoList from \"./list.js\";\nimport { useState, useEffect } from \"react\";\nimport { Alert, Container, Row, Col } from \"react-bootstrap\";\n\nimport \"./todo.scss\";\nconst todoAPI = \"https://api-js401.herokuapp.com/api/v1/todo\";\n\nfunction ToDo(props) {\n  const [list, setList] = useState([]);\n\n  // const addItem = (item) => {\n  //   item._id = Math.random();\n  //   item.complete = false;\n  //   setList([...list, item]);\n  // };\n\n  const toggleComplete = (id) => {\n    let item = list.filter((i) => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let list1 = list.map((listItem) =>\n        listItem._id === item._id ? item : listItem\n      );\n      setList(list1);\n    }\n  };\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: \"get\",\n      mode: \"cors\",\n    })\n      .then((data) => data.json())\n      .then((data) => setList(data.results))\n      .catch(console.error);\n  };\n\n  useEffect(_getTodoItems, []);\n  // useEffect(() => {\n  //   let list2 = [\n  //     {\n  //       _id: 1,\n  //       complete: false,\n  //       text: \"Clean the Kitchen\",\n  //       difficulty: 3,\n  //       assignee: \"Person A\",\n  //     },\n  //     {\n  //       _id: 2,\n  //       complete: false,\n  //       text: \"Do the Laundry\",\n  //       difficulty: 2,\n  //       assignee: \"Person A\",\n  //     },\n  //     {\n  //       _id: 3,\n  //       complete: false,\n  //       text: \"Walk the Dog\",\n  //       difficulty: 4,\n  //       assignee: \"Person B\",\n  //     },\n  //     {\n  //       _id: 4,\n  //       complete: true,\n  //       text: \"Do Homework\",\n  //       difficulty: 3,\n  //       assignee: \"Person C\",\n  //     },\n  //     {\n  //       _id: 5,\n  //       complete: false,\n  //       text: \"Take a Nap\",\n  //       difficulty: 1,\n  //       assignee: \"Person B\",\n  //     },\n  //   ];\n  //   setList(list2);\n  // }, []);\n\n  useEffect(() => {\n    //complete/incomplete\n    document.title =\n      \"To-do List \" +\n      list.filter((item) => !item.complete).length +\n      \" Completed/ \" +\n      list.filter((item) => item.complete).length +\n      \" Incompleted\";\n  });\n\n  return (\n    <Container fluid=\"md\">\n      <br />\n      <Row xs={7}>\n        <Col>\n          <Alert key=\"0\" variant=\"primary\">\n            <Alert.Heading style={{ \"text-align\": \"center\" }}>\n              There are {list.filter((item) => !item.complete).length} Items To\n              Complete\n            </Alert.Heading>\n          </Alert>\n        </Col>\n      </Row>\n\n      <section className=\"todo\">\n        <Row>\n          <Col xs={5}>\n            <TodoForm handleSubmit={addItem} />\n          </Col>\n\n          <Col>\n            <TodoList list={list} handleComplete={toggleComplete} />\n          </Col>\n        </Row>\n      </section>\n    </Container>\n  );\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}