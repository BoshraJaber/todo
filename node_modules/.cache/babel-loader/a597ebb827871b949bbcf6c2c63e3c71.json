{"ast":null,"code":"var _jsxFileName = \"/home/boshra/401labs/hooks/todo/src/components/todo/todo.js\";\nimport React from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport { useState, useEffect } from 'react';\nimport { Alert, Container, Row, Col } from \"react-bootstrap\";\nimport Badge from 'react-bootstrap/Badge';\nimport './todo.scss';\n\nfunction ToDo(props) {\n  const [list, setList] = useState([]);\n\n  const addItem = item => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n  const toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let list1 = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(list1);\n    }\n  };\n\n  useEffect(() => {\n    let list2 = [{\n      _id: 1,\n      complete: false,\n      text: 'Clean the Kitchen',\n      difficulty: 3,\n      assignee: 'Person A'\n    }, {\n      _id: 2,\n      complete: false,\n      text: 'Do the Laundry',\n      difficulty: 2,\n      assignee: 'Person A'\n    }, {\n      _id: 3,\n      complete: false,\n      text: 'Walk the Dog',\n      difficulty: 4,\n      assignee: 'Person B'\n    }, {\n      _id: 4,\n      complete: true,\n      text: 'Do Homework',\n      difficulty: 3,\n      assignee: 'Person C'\n    }, {\n      _id: 5,\n      complete: false,\n      text: 'Take a Nap',\n      difficulty: 1,\n      assignee: 'Person B'\n    }];\n    setList(list2);\n  }, []);\n  useEffect(() => {\n    //complete/incomplete\n    document.title = \"To-do List \" + list.filter(item => !item.complete).length + \" Completed/ \" + list.filter(item => item.complete).length + \" Incompleted\";\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    key: \"0\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Alert.Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"There are \", list.filter(item => !item.complete).length, \" Items To Complete\")))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    handleSubmit: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: toggleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/components/todo/todo.js"],"names":["React","TodoForm","TodoList","useState","useEffect","Alert","Container","Row","Col","Badge","ToDo","props","list","setList","addItem","item","_id","Math","random","complete","toggleComplete","id","filter","i","list1","map","listItem","list2","text","difficulty","assignee","document","title","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,KAAR,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,QAAyC,iBAAzC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAO,aAAP;;AAEA,SAASC,IAAT,CAAeC,KAAf,EAAqB;AAEnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMW,OAAO,GAAIC,IAAD,IAAU;AACxBA,IAAAA,IAAI,CAACC,GAAL,GAAWC,IAAI,CAACC,MAAL,EAAX;AACAH,IAAAA,IAAI,CAACI,QAAL,GAAgB,KAAhB;AACAN,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUG,IAAV,CAAD,CAAP;AACD,GAJD;;AAMD,QAAMK,cAAc,GAAGC,EAAE,IAAI;AAE1B,QAAIN,IAAI,GAAGH,IAAI,CAACU,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACP,GAAF,KAAUK,EAA3B,EAA+B,CAA/B,KAAqC,EAAhD;;AAEA,QAAIN,IAAI,CAACC,GAAT,EAAc;AACZD,MAAAA,IAAI,CAACI,QAAL,GAAgB,CAACJ,IAAI,CAACI,QAAtB;AACA,UAAIK,KAAK,GAAGZ,IAAI,CAACa,GAAL,CAASC,QAAQ,IAAIA,QAAQ,CAACV,GAAT,KAAiBD,IAAI,CAACC,GAAtB,GAA4BD,IAA5B,GAAmCW,QAAxD,CAAZ;AACAb,MAAAA,OAAO,CAACW,KAAD,CAAP;AACD;AAEF,GAVF;;AAYCpB,EAAAA,SAAS,CAAE,MAAI;AACb,QAAIuB,KAAK,GAAI,CACX;AAAEX,MAAAA,GAAG,EAAE,CAAP;AAAUG,MAAAA,QAAQ,EAAE,KAApB;AAA2BS,MAAAA,IAAI,EAAE,mBAAjC;AAAsDC,MAAAA,UAAU,EAAE,CAAlE;AAAqEC,MAAAA,QAAQ,EAAE;AAA/E,KADW,EAEX;AAAEd,MAAAA,GAAG,EAAE,CAAP;AAAUG,MAAAA,QAAQ,EAAE,KAApB;AAA2BS,MAAAA,IAAI,EAAE,gBAAjC;AAAmDC,MAAAA,UAAU,EAAE,CAA/D;AAAkEC,MAAAA,QAAQ,EAAE;AAA5E,KAFW,EAGX;AAAEd,MAAAA,GAAG,EAAE,CAAP;AAAUG,MAAAA,QAAQ,EAAE,KAApB;AAA2BS,MAAAA,IAAI,EAAE,cAAjC;AAAiDC,MAAAA,UAAU,EAAE,CAA7D;AAAgEC,MAAAA,QAAQ,EAAE;AAA1E,KAHW,EAIX;AAAEd,MAAAA,GAAG,EAAE,CAAP;AAAUG,MAAAA,QAAQ,EAAE,IAApB;AAA0BS,MAAAA,IAAI,EAAE,aAAhC;AAA+CC,MAAAA,UAAU,EAAE,CAA3D;AAA8DC,MAAAA,QAAQ,EAAE;AAAxE,KAJW,EAKX;AAAEd,MAAAA,GAAG,EAAE,CAAP;AAAUG,MAAAA,QAAQ,EAAE,KAApB;AAA2BS,MAAAA,IAAI,EAAE,YAAjC;AAA+CC,MAAAA,UAAU,EAAE,CAA3D;AAA8DC,MAAAA,QAAQ,EAAE;AAAxE,KALW,CAAb;AAOAjB,IAAAA,OAAO,CAACc,KAAD,CAAP;AACD,GATQ,EASP,EATO,CAAT;AAWAvB,EAAAA,SAAS,CAAE,MAAM;AACf;AACA2B,IAAAA,QAAQ,CAACC,KAAT,GAAiB,gBACfpB,IAAI,CAACU,MAAL,CAAaP,IAAD,IAAU,CAACA,IAAI,CAACI,QAA5B,EAAsCc,MADvB,GACgC,cADhC,GAEfrB,IAAI,CAACU,MAAL,CAAaP,IAAD,IAAUA,IAAI,CAACI,QAA3B,EAAqCc,MAFtB,GAE+B,cAFhD;AAGD,GALQ,CAAT;AAOE,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAQ,IAAA,GAAG,EAAC,GAAZ;AAAgB,IAAA,OAAO,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA0BrB,IAAI,CAACU,MAAL,CAAaP,IAAD,IAAU,CAACA,IAAI,CAACI,QAA5B,EAAsCc,MAAhE,uBADI,CADA,CADF,CAFF,eAaE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,YAAY,EAAEnB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFA,eAMA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,cAAc,EAAEQ,cAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANA,CADF,CAbF,CADF;AAiCH;;AAED,eAAeV,IAAf","sourcesContent":["import React from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport {useState, useEffect} from 'react'\nimport {Alert, Container, Row, Col} from \"react-bootstrap\";\nimport Badge from 'react-bootstrap/Badge'\n\nimport './todo.scss';\n\nfunction ToDo (props){\n\n  const [list, setList] = useState([])\n\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n const toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let list1 = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(list1);\n    }\n\n  };\n\n  useEffect( ()=>{\n    let list2 =  [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n    ];\n    setList(list2);\n  },[]);\n\n  useEffect( () => {\n    //complete/incomplete\n    document.title = \"To-do List \" +\n      list.filter((item) => !item.complete).length + \" Completed/ \" +\n      list.filter((item) => item.complete).length + \" Incompleted\";\n  });\n\n    return (\n      <Container fluid=\"md\">\n \n        <Row>\n          <Col>\n          <Alert  key='0' variant='primary'>\n      <Alert.Heading>There are {list.filter((item) => !item.complete).length} Items To\n          Complete</Alert.Heading>\n          </Alert>\n          </Col>\n        </Row>\n\n \n\n        <section className=\"todo\">\n          <Row>\n\n          <Col xs={5}>\n            <TodoForm handleSubmit={addItem} />\n          </Col>\n\n          <Col >\n            <TodoList\n              list={list}\n              handleComplete={toggleComplete}\n            />\n          </Col>\n          </Row>\n        </section>\n        \n      </Container>\n    );\n  \n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}