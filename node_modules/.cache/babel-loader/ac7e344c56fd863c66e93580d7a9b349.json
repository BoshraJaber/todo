{"ast":null,"code":"var _jsxFileName = \"/home/boshra/401labs/hooks/todo/src/components/todo/list.js\";\nimport React, { useContext } from \"react\";\nimport { Badge, Toast, Pagination } from \"react-bootstrap\";\nimport { If, Then, Else } from \"react-if\";\nimport { SettingsContext } from '../../context/setting';\n\nfunction TodoList(props) {\n  const context = useContext(SettingsContext);\n  const [currentPage, setCurrentPage] = useState(context.firstPage);\n  const maxItems = context.itemCount; // sorting hard-coded according to difficulty\n\n  const sortedList = props.list.sort((a, b) => b.difficulty - a.difficulty); // display completed items first\n\n  const allList = sortedList.sort((a, b) => {\n    return a.complete === b.complete ? 0 : a ? -1 : 1;\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.list.map(item => /*#__PURE__*/React.createElement(Toast // bg={\"light\"}\n  // key={item._id}\n  // className=\"rounded mr-2\"\n  , {\n    style: {\n      width: \"100%\",\n      height: 'auto',\n      display: \"flex\",\n      flexDirection: 'column'\n    },\n    onClose: () => props.handleDelete(item._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toast.Header, {\n    style: {\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(If, {\n    condition: item.complete === false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Then, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    onClick: () => props.handleComplete(item._id),\n    pill: true,\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \" pending\")), \"     \"), /*#__PURE__*/React.createElement(Else, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    onClick: () => props.handleComplete(item._id),\n    pill: true,\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \" complete \")), \"      \")), item.assignee), /*#__PURE__*/React.createElement(Toast.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, item.text, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"mr-auto\",\n    style: {\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \" Difficulty: \", item.difficulty)))));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/components/todo/list.js"],"names":["React","useContext","Badge","Toast","Pagination","If","Then","Else","SettingsContext","TodoList","props","context","currentPage","setCurrentPage","useState","firstPage","maxItems","itemCount","sortedList","list","sort","a","b","difficulty","allList","complete","map","item","width","height","display","flexDirection","handleDelete","_id","justifyContent","handleComplete","assignee","text","float"],"mappings":"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","sourcesContent":["import React, {useContext} from \"react\";\nimport { Badge, Toast, Pagination } from \"react-bootstrap\";\nimport { If, Then, Else } from \"react-if\";\nimport { SettingsContext } from '../../context/setting';\n\nfunction TodoList(props) {\n  const context = useContext(SettingsContext);\n  const [currentPage, setCurrentPage] = useState(context.firstPage);\n  const maxItems = context.itemCount;\n  // sorting hard-coded according to difficulty\n  const sortedList = props.list.sort((a, b) => b.difficulty - a.difficulty);\n  // display completed items first\n  const allList = sortedList.sort((a, b) => {\n    return a.complete === b.complete ? 0 : a ? -1 : 1;\n  });\n  return (\n    <>\n      {props.list.map((item) => (\n        <Toast\n          // bg={\"light\"}\n          // key={item._id}\n          // className=\"rounded mr-2\"\n          \n          style={{ width: \"100%\", height:'auto',display: \"flex\",  flexDirection: 'column'}}\n          onClose={() => props.handleDelete(item._id)}\n        >\n            <Toast.Header style={{ justifyContent: 'space-between'}}>\n              <If condition={item.complete === false}>\n                <Then>\n                <Badge onClick={() => props.handleComplete(item._id)} pill variant=\"success\">\n                <strong className=\"mr-auto\"> pending</strong>\n              </Badge>{\"     \"}\n                </Then>\n                <Else>\n                <Badge onClick={() => props.handleComplete(item._id)}  pill variant=\"danger\">\n                <strong className=\"mr-auto\"> complete </strong>\n              </Badge>{\"      \"}\n                </Else>\n              </If>\n             {item.assignee}\n            </Toast.Header>\n            <Toast.Body>\n              {item.text}\n              <br />\n              <small className=\"mr-auto\"  style={{ float: \"right\", }}> Difficulty: {item.difficulty}</small>\n             \n            </Toast.Body>\n          \n        </Toast>\n      ))}\n    </>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}