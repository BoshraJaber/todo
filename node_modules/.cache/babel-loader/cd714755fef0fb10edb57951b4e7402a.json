{"ast":null,"code":"var _jsxFileName = \"/home/boshra/401labs/hooks/todo/src/context/auth.js\";\nimport React, { useState, useEffect } from \"react\";\nimport cookie from \"react-cookies\";\nimport jwt from \"jsonwebtoken\";\nimport dotenv from \"dotenv\";\nimport superagent from \"superagent\";\ndotenv.config();\nconst API = process.env.API;\nconst SECERT = process.env.SECERT; // this component is responsible for the login and log out and setting the cookies and the global state.\n\nexport const LoginContext = React.createContext();\n\nconst LoginProvider = props => {\n  const [user, setUser] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    const token = cookie.load('auth');\n    validateToken(token);\n  }, []);\n\n  function validateToken(token) {\n    try {\n      const user = jwt.decode(token);\n      if (user) setLoginState(true, token, user);\n    } catch (error) {\n      setLoginState(false, null, {});\n      console.log(`Token Validation Error ${error.message}`);\n    }\n  }\n\n  function setLoginState(loggedIn, token, user) {\n    cookie.save('auth', token);\n    setUser({\n      user\n    });\n    setLoggedIn(loggedIn);\n  }\n\n  function setLogoutState(loggedIn, user) {\n    cookie.save('auth', null);\n    setUser({\n      user\n    });\n    setLoggedIn(loggedIn);\n  }\n\n  async function login(username, password) {\n    try {\n      const response = await superagent.post(`${API}/signin`).set('authorization', `Basic ${btoa(`${username}:${password}`)}`);\n      validateToken(response.body.token);\n    } catch (error) {\n      console.error('Signin Error', error.message);\n    }\n  }\n\n  async function signup(email, username, password, role) {\n    try {\n      const response = await superagent.post(`${API}/signup`, {\n        email,\n        username,\n        password,\n        role\n      });\n      validateToken(response.body.token);\n    } catch (error) {\n      console.error('Signup Error', error.message);\n    }\n  }\n\n  function logout() {\n    setLogoutState(false, {});\n  }\n\n  const state = {\n    loggedIn,\n    user,\n    setLoggedIn,\n    login,\n    signup,\n    logout,\n    setUser\n  };\n  return /*#__PURE__*/React.createElement(LoginContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 3\n    }\n  }, props.children);\n};\n\nexport default LoginProvider;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/context/auth.js"],"names":["React","useState","useEffect","cookie","jwt","dotenv","superagent","config","API","process","env","SECERT","LoginContext","createContext","LoginProvider","props","user","setUser","loggedIn","setLoggedIn","token","load","validateToken","decode","setLoginState","error","console","log","message","save","setLogoutState","login","username","password","response","post","set","btoa","body","signup","email","role","logout","state","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport cookie from \"react-cookies\";\nimport jwt from \"jsonwebtoken\";\nimport dotenv from \"dotenv\";\nimport superagent from \"superagent\";\ndotenv.config();\n\nconst API = process.env.API;\nconst SECERT = process.env.SECERT;\n// this component is responsible for the login and log out and setting the cookies and the global state.\nexport const LoginContext = React.createContext();\n\nconst LoginProvider = (props) => {\n\tconst [user, setUser] = useState({});\n\tconst [loggedIn, setLoggedIn] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst token = cookie.load('auth');\n\t\tvalidateToken(token);\n\t}, []);\n\n\tfunction validateToken(token) {\n\t\ttry {\n\t\t\tconst user = jwt.decode(token);\n\t\t\tif (user) setLoginState(true, token, user);\n\t\t} catch (error) {\n\t\t\tsetLoginState(false, null, {});\n\t\t\tconsole.log(`Token Validation Error ${error.message}`);\n\t\t}\n\t}\n\n\tfunction setLoginState(loggedIn, token, user) {\n\t\tcookie.save('auth', token);\n\t\tsetUser({ user });\n\t\tsetLoggedIn(loggedIn);\n\t}\n\n\tfunction setLogoutState(loggedIn, user) {\n\t\tcookie.save('auth', null);\n\t\tsetUser({ user });\n\t\tsetLoggedIn(loggedIn);\n\t}\n\n\tasync function login(username, password) {\n\t\ttry {\n\t\t\tconst response = await superagent\n\t\t\t\t.post(`${API}/signin`)\n\t\t\t\t.set('authorization', `Basic ${btoa(`${username}:${password}`)}`);\n\t\t\tvalidateToken(response.body.token);\n\t\t} catch (error) {\n\t\t\tconsole.error('Signin Error', error.message);\n\t\t}\n\t}\n\n\tasync function signup(email, username, password, role) {\n\t\ttry {\n\t\t\tconst response = await superagent.post(`${API}/signup`, {\n\t\t\t\temail,\n\t\t\t\tusername,\n\t\t\t\tpassword,\n\t\t\t\trole,\n\t\t\t});\n\n\t\t\tvalidateToken(response.body.token);\n\t\t} catch (error) {\n\t\t\tconsole.error('Signup Error', error.message);\n\t\t}\n\t}\n\n\tfunction logout() {\n\t\tsetLogoutState(false, {});\n\t}\n\n\tconst state = {\n\t\tloggedIn,\n\t\tuser,\n\t\tsetLoggedIn,\n\t\tlogin,\n\t\tsignup,\n\t\tlogout,\n\t\tsetUser,\n\t};\n\n\treturn (\n\t\t<LoginContext.Provider value={state}>\n\t\t\t{props.children}\n\t\t</LoginContext.Provider>\n\t);\n};\n\n\nexport default LoginProvider;\n"]},"metadata":{},"sourceType":"module"}