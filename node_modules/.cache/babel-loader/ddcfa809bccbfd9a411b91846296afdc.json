{"ast":null,"code":"import _toConsumableArray from\"/home/boshra/401labs/hooks/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/boshra/401labs/hooks/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useContext}from'react';import{LoginContext}from'../Auth/context';var useAjax=function useAjax(props){var todoAPI=\"https://api-js401.herokuapp.com/api/v1/todo\";var _useState=useState([]),_useState2=_slicedToArray(_useState,2),list=_useState2[0],setList=_useState2[1];var loginContext=useContext(LoginContext);var _addItem=function _addItem(item){if(loginContext.user.user.type==='admin'||loginContext.user.user.type==='editor'){item.due=new Date();fetch(todoAPI,{method:\"post\",mode:\"cors\",cache:\"no-cache\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(item)}).then(function(response){return response.json();}).then(function(savedItem){setList([].concat(_toConsumableArray(list),[savedItem]));}).catch(console.error);}};var _toggleComplete=function _toggleComplete(id){if(loginContext.user.user.type==='admin'||loginContext.user.user.type==='editor'){var item=list.filter(function(i){return i._id===id;})[0]||{};if(item._id){item.complete=!item.complete;var url=\"\".concat(todoAPI,\"/\").concat(id);fetch(url,{method:\"put\",mode:\"cors\",cache:\"no-cache\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(item)}).then(function(response){return response.json();}).then(function(savedItem){setList(list.map(function(listItem){return listItem._id===item._id?savedItem:listItem;}));}).catch(console.error);}}};var _getTodoItems=function _getTodoItems(){fetch(todoAPI,{method:\"get\",mode:\"cors\"}).then(function(data){return data.json();}).then(function(data){return setList(data.results);}).catch(console.error);};var _deleteTask=function _deleteTask(id){if(loginContext.user.user.type==='admin'){var item=list.filter(function(i){return i._id===id;})[0]||{};if(item._id){var url=\"\".concat(todoAPI,\"/\").concat(id);fetch(url,{method:'delete',mode:'cors'}).then(function(data){return data.json();}).then(function(data){console.log(data);var newList=list.filter(function(item){return item!==data;});setList(newList);_getTodoItems();}).catch(console.error);}}};return[list,_addItem,_toggleComplete,_getTodoItems,_deleteTask];};export default useAjax;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/customHooks/Ajax.js"],"names":["useState","useContext","LoginContext","useAjax","props","todoAPI","list","setList","loginContext","_addItem","item","user","type","due","Date","fetch","method","mode","cache","headers","body","JSON","stringify","then","response","json","savedItem","catch","console","error","_toggleComplete","id","filter","i","_id","complete","url","map","listItem","_getTodoItems","data","results","_deleteTask","log","newList"],"mappings":"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","sourcesContent":["import { useState,useContext  } from 'react';\nimport { LoginContext } from '../Auth/context';\n\nconst useAjax = (props) => {\n    const todoAPI = \"https://api-js401.herokuapp.com/api/v1/todo\";\n  const [list, setList] = useState([]);\n  const loginContext = useContext(LoginContext);\n\n\n  const _addItem = (item) => {\n    if(loginContext.user.user.type === 'admin' || loginContext.user.user.type === 'editor'){\n      item.due = new Date();\n      fetch(todoAPI, {\n        method: \"post\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(item),\n      })\n        .then((response) => response.json())\n        .then((savedItem) => {\n          setList([...list, savedItem]);\n        })\n        .catch(console.error);\n    } \n  };\n  \n  const _toggleComplete = (id) => {\n    if(loginContext.user.user.type === 'admin' || loginContext.user.user.type === 'editor'){\n      let item = list.filter((i) => i._id === id)[0] || {};\n\n      if (item._id) {\n        item.complete = !item.complete;\n  \n        let url = `${todoAPI}/${id}`;\n  \n        fetch(url, {\n          method: \"put\",\n          mode: \"cors\",\n          cache: \"no-cache\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(item),\n        })\n          .then((response) => response.json())\n          .then((savedItem) => {\n            setList(\n              list.map((listItem) =>\n                listItem._id === item._id ? savedItem : listItem\n              )\n            );\n          })\n          .catch(console.error);\n      }\n    }\n\n  };\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: \"get\",\n      mode: \"cors\",\n    })\n      .then((data) => data.json())\n      .then((data) => setList(data.results))\n      .catch(console.error);\n  };\n\n  const _deleteTask =  (id)=>{\n    if(loginContext.user.user.type === 'admin'){\n      let item = list.filter((i) => i._id === id)[0] || {};\n      if (item._id) {\n        let url = `${todoAPI}/${id}`;\n        fetch(url, {\n          method: 'delete',\n          mode: 'cors',\n        }).then((data) => data.json())\n        .then((data) =>{\n          console.log(data);\n          const newList = list.filter(item => item !== data)\n  \n          setList(newList)\n          _getTodoItems()\n        })\n        .catch(console.error);\n      }\n    } \n}\n\n  return [list, _addItem, _toggleComplete, _getTodoItems, _deleteTask ];\n};\n\nexport default useAjax;"]},"metadata":{},"sourceType":"module"}