{"ast":null,"code":"import { useState, useContext } from 'react';\nimport { LoginContext } from '../Auth/context';\n\nconst useAjax = props => {\n  const todoAPI = \"https://api-js401.herokuapp.com/api/v1/todo\";\n  const [list, setList] = useState([]);\n  const loginContext = useContext(LoginContext);\n\n  const _addItem = item => {\n    if (loginContext.user.user.type === 'admin' || loginContext.user.user.type === 'editor') {}\n  };\n\n  const _toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let url = `${todoAPI}/${id}`;\n      fetch(url, {\n        method: \"put\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(item)\n      }).then(response => response.json()).then(savedItem => {\n        setList(list.map(listItem => listItem._id === item._id ? savedItem : listItem));\n      }).catch(console.error);\n    }\n  };\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: \"get\",\n      mode: \"cors\"\n    }).then(data => data.json()).then(data => setList(data.results)).catch(console.error);\n  };\n\n  const _deleteTask = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      let url = `${todoAPI}/${id}`;\n      fetch(url, {\n        method: 'delete',\n        mode: 'cors'\n      }).then(data => data.json()).then(data => {\n        console.log(data);\n        const newList = list.filter(item => item !== data);\n        setList(newList);\n\n        _getTodoItems();\n      }).catch(console.error);\n    }\n  };\n\n  return [list, _addItem, _toggleComplete, _getTodoItems, _deleteTask];\n};\n\nexport default useAjax;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/customHooks/Ajax.js"],"names":["useState","useContext","LoginContext","useAjax","props","todoAPI","list","setList","loginContext","_addItem","item","user","type","_toggleComplete","id","filter","i","_id","complete","url","fetch","method","mode","cache","headers","body","JSON","stringify","then","response","json","savedItem","map","listItem","catch","console","error","_getTodoItems","data","results","_deleteTask","log","newList"],"mappings":"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","sourcesContent":["import { useState,useContext  } from 'react';\nimport { LoginContext } from '../Auth/context';\n\nconst useAjax = (props) => {\n    const todoAPI = \"https://api-js401.herokuapp.com/api/v1/todo\";\n  const [list, setList] = useState([]);\n  const loginContext = useContext(LoginContext);\n\n\n  const _addItem = (item) => {\n    if(loginContext.user.user.type === 'admin' || loginContext.user.user.type === 'editor'){\n\n    }\n   \n  };\n  \n  const _toggleComplete = (id) => {\n    let item = list.filter((i) => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n\n      let url = `${todoAPI}/${id}`;\n\n      fetch(url, {\n        method: \"put\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(item),\n      })\n        .then((response) => response.json())\n        .then((savedItem) => {\n          setList(\n            list.map((listItem) =>\n              listItem._id === item._id ? savedItem : listItem\n            )\n          );\n        })\n        .catch(console.error);\n    }\n  };\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: \"get\",\n      mode: \"cors\",\n    })\n      .then((data) => data.json())\n      .then((data) => setList(data.results))\n      .catch(console.error);\n  };\n\n  const _deleteTask =  (id)=>{\n    let item = list.filter((i) => i._id === id)[0] || {};\n    if (item._id) {\n      let url = `${todoAPI}/${id}`;\n      fetch(url, {\n        method: 'delete',\n        mode: 'cors',\n      }).then((data) => data.json())\n      .then((data) =>{\n        console.log(data);\n        const newList = list.filter(item => item !== data)\n\n        setList(newList)\n        _getTodoItems()\n      })\n      .catch(console.error);\n    }\n}\n\n  return [list, _addItem, _toggleComplete, _getTodoItems, _deleteTask ];\n};\n\nexport default useAjax;"]},"metadata":{},"sourceType":"module"}