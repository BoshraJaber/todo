{"ast":null,"code":"var _jsxFileName = \"/home/boshra/401labs/hooks/todo/src/components/todo/list.js\";\nimport React from \"react\";\nimport { ListGroup, Card, Badge, Toast } from \"react-bootstrap\";\nimport { If, Then, Else } from \"react-if\";\n\nfunction TodoList(props) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.list.map(item => /*#__PURE__*/React.createElement(Toast // bg={\"light\"}\n  // key={item._id}\n  // className=\"rounded mr-2\"\n  , {\n    text: \"light\" === \"light\" ? \"dark\" : \"white\",\n    style: {\n      width: \"100%\",\n      height: '30%'\n    },\n    onClose: () => props.handleDelete(item._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toast.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(If, {\n    condition: item.complete == false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Then, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    onClick: () => props.handleComplete(item._id),\n    pill: true,\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \" pending\")), \"     \"), /*#__PURE__*/React.createElement(Else, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    onClick: () => props.handleComplete(item._id),\n    pill: true,\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \" complete \")), \"      \")), item.assignee), /*#__PURE__*/React.createElement(Toast.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, item.text, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"mr-auto\",\n    style: {\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \" Difficulty: \", item.difficulty)))));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/home/boshra/401labs/hooks/todo/src/components/todo/list.js"],"names":["React","ListGroup","Card","Badge","Toast","If","Then","Else","TodoList","props","list","map","item","width","height","handleDelete","_id","complete","handleComplete","assignee","text","float","difficulty"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,KAAjC,QAA8C,iBAA9C;AACA,SAASC,EAAT,EAAaC,IAAb,EAAmBC,IAAnB,QAA+B,UAA/B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE,0CACGA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAgBC,IAAD,iBACd,oBAAC,KAAD,CACE;AACA;AACA;AAHF;AAIE,IAAA,IAAI,EAAE,YAAY,OAAZ,GAAsB,MAAtB,GAA+B,OAJvC;AAKE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAC;AAAxB,KALT;AAME,IAAA,OAAO,EAAE,MAAML,KAAK,CAACM,YAAN,CAAmBH,IAAI,CAACI,GAAxB,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,EAAD;AAAI,IAAA,SAAS,EAAEJ,IAAI,CAACK,QAAL,IAAiB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAE,MAAMR,KAAK,CAACS,cAAN,CAAqBN,IAAI,CAACI,GAA1B,CAAtB;AAAsD,IAAA,IAAI,MAA1D;AAA2D,IAAA,OAAO,EAAC,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CADA,EAGO,OAHP,CADF,eAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAE,MAAMP,KAAK,CAACS,cAAN,CAAqBN,IAAI,CAACI,GAA1B,CAAtB;AAAuD,IAAA,IAAI,MAA3D;AAA4D,IAAA,OAAO,EAAC,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,CADA,EAGO,QAHP,CANF,CADF,EAaEJ,IAAI,CAACO,QAbP,CARJ,eAuBI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,CAACQ,IADR,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAO,IAAA,SAAS,EAAC,SAAjB;AAA4B,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAsET,IAAI,CAACU,UAA3E,CAHF,CAvBJ,CADD,CADH,CADF;AAqCD;;AAED,eAAed,QAAf","sourcesContent":["import React from \"react\";\nimport { ListGroup, Card, Badge, Toast } from \"react-bootstrap\";\nimport { If, Then, Else } from \"react-if\";\n\nfunction TodoList(props) {\n  return (\n    <>\n      {props.list.map((item) => (\n        <Toast\n          // bg={\"light\"}\n          // key={item._id}\n          // className=\"rounded mr-2\"\n          text={\"light\" === \"light\" ? \"dark\" : \"white\"}\n          style={{ width: \"100%\", height:'30%'}}\n          onClose={() => props.handleDelete(item._id)}\n        >\n            <Toast.Header>\n              <If condition={item.complete == false}>\n                <Then>\n                <Badge onClick={() => props.handleComplete(item._id)} pill variant=\"success\">\n                <strong className=\"mr-auto\"> pending</strong>\n              </Badge>{\"     \"}\n                </Then>\n                <Else>\n                <Badge onClick={() => props.handleComplete(item._id)}  pill variant=\"danger\">\n                <strong className=\"mr-auto\"> complete </strong>\n              </Badge>{\"      \"}\n                </Else>\n              </If>\n             {item.assignee}\n            </Toast.Header>\n            <Toast.Body>\n              {item.text}\n              <br />\n              <small className=\"mr-auto\"  style={{ float: \"right\", }}> Difficulty: {item.difficulty}</small>\n             \n            </Toast.Body>\n          \n        </Toast>\n      ))}\n    </>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}